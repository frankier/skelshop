## Environment variables
import os
from os.path import join as pjoin
from shutil import which


def cnf(name, val):
    globals()[name] = config.setdefault(name, val)

# Intermediate dirs
cnf("WORK", "work")
SETUP_WORK = os.environ.get("SETUP_WORK", WORK)
cnf("VIDEO_BASE", ".")
cnf("DUMP_BASE", ".")
cnf("GCN_WEIGHTS", pjoin(SETUP_WORK, "gcn_weights"))
cnf("GCN_CONFIG", pjoin(SETUP_WORK, "gcn_config.yaml"))
cnf("FFPROBE_BIN", which("ffprobe"))

## Configs

GCN_INFERNENCE_YAML = """
weights: {gcn_weights}

# model
model: lighttrack.graph.gcn_utils.gcn_model.Model
model_args:
  in_channels: 2
  num_class: 128 # output feature dimension
  edge_importance_weighting: True
  graph_args:
    layout: 'PoseTrack'
    strategy: 'spatial'

# testing
device: [0]
""".strip()

## Rules

include: "rules/skels.smk"
include: "rules/calibrate.smk"
include: "rules/faces.smk"

rule setup:
    "Perform setup actions"
    input:
        GCN_CONFIG

def all(ext):
    base, = glob_wildcards(pjoin(VIDEO_BASE, "{base}.mp4"))
    return [fn + ext for fn in base]

rule tracked_all:
    "Produce tracked dumps of all videos in VIDEO_BASE"
    input:
        [pjoin(DUMP_BASE, fn) for fn in all(".opt_lighttrack.h5")]
    output:
        touch(".tracked_all.done")

rule get_gcn_weights:
    output:
        directory(GCN_WEIGHTS)
    shell:
        "mkdir -p " + GCN_WEIGHTS + " && " +
        "cd " + GCN_WEIGHTS + " && " +
        "wget http://guanghan.info/download/Data/LightTrack/weights/GCN.zip && " + 
        "unzip GCN.zip"

rule tmpl_gcn_config:
    input:
        GCN_WEIGHTS
    output:
        GCN_CONFIG
    run:
        open(GCN_CONFIG, "w").write(
            GCN_INFERNENCE_YAML.format(
                gcn_weights=pjoin(os.getcwd(), GCN_WEIGHTS, "GCN/epoch210_model.pt")
            )
        )

rule drawsticks:
    "Produces stick videos"
    input:
        skels = pjoin(DUMP_BASE, "{base}.{var}.h5"),
        video = pjoin(VIDEO_BASE, "{base}.mp4")
    output:
        pjoin(DUMP_BASE, "{base}.{var}.sticks.mp4")
    shell:
        "python -m skelshop --ffprobe-bin {FFPROBE_BIN} drawsticks " +
        "{input.skels} {input.video} {output}"
